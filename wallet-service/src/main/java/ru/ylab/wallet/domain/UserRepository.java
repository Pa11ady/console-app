package ru.ylab.wallet.domain;

import ru.ylab.wallet.domain.model.User;

import java.util.Optional;
import java.util.UUID;

/**
 * Интерфейс для репозитория пользователей.
 * Этот интерфейс определяет методы для создания,
 * поиска и обновления информации о пользователях.
 */

public interface UserRepository {
    /**
     * Сохраняет нового пользователя в  репозитории пользователей.  Уникальный идентификатор
     * поступает снаружи.
     *
     * @param user Объект пользователя для создания.
     * @return Созданный пользователь.
     */
    User createUser(User user);

    /**
     * Поиск пользователя по уникальному идентификатору.
     *
     * @param userId Уникальный идентификатор пользователя.
     * @return Объект пользователя, если он найден, или пустое значение Optional,
     * если пользователь не существует.
     */
    Optional<User> findUserById(UUID userId);

    /**
     * Поиск пользователя по логину.
     *
     * @param login Логин пользователя.
     * @return Объект пользователя, если он найден,
     * или пустое значение Optional, если пользователь с данным логином не существует.
     */
    Optional<User> findUserByLogin(String login);

    /**
     * Обновление информации о пользователе.
     *
     * @param user Объект пользователя с обновленной информацией.
     * @return Обновленный объект пользователя.
     */
    User updateUser(User user);
}
